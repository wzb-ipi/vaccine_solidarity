if (!require(pacman)) install.packages("pacman")
pacman::p_load(
ggpubr,      # for ggarrange
ggridges,    # plot
cregg,       # conjoint
readxl,      # read excel
gtrendsR,    # google trends
aod,         # hypothesis testing (1.3.1)
car,         # linear hypothesis testing for causal tree (3.0-2)
corrplot,    # Correlations (0.84)
DeclareDesign,
dplyr,       # Data manipulation (0.8.0.1)
evtree,      # evolutionary learning of globally optimal trees (1.0-7)
fastDummies,
fBasics,     # Summary statistics (3042.89)
ggplot2,
grf,         # Generalized random forests (0.10.2)
haven,       # load sav
kableExtra,  # Prettier RMarkdown (1.0.1)
knitr,
labelled,
psych,       # Correlation p-values (1.8.12)
purrr,
rpart,       # Classification and regression trees, or CART (4.1-13)
reshape2,
rpart.plot,  # Plotting trees (3.0.6)
readr,       # Reading csv files (1.3.1)
sjlabelled,
stats,
summarytools,
texreg,
tidyverse,
tidyselect,
tidyr,       # Database operations (0.8.3)
treeClust,   # Predicting leaf position for causal trees (1.1-7)
tibble)      # Modern alternative to data frames (2.1.1)
# Set seed for reproducibility
set.seed(201911)
# Chunk 2
deal_labels = c("No deal"=0, "20 give 20 bn"=1, "40 give 20b"=2,
"20 give 40 bn"=3, "40 give 40 bn"=4)
# c('Control: kein Abkommen'=0,
#   'Treatment: Abkommen, 20 Länder, 20 Milliarden'=1,
#   'Treatment: Abkommen, 40 Länder, 20 Milliarden'=2,
#   'Treatment: Abkommen, 20 Länder, 40 Milliarden'=3,
#   'Treatment: Abkommen, 40 Länder, 40 Milliarden'=4)
main_df <- read_csv('1_input/combined.csv')
w4 <- main_df %>% dplyr::filter(wave==4)
# labs <- var_label(w4) %>% unlist
# data.frame(names(labs), labs) %>% kable()
# creating vignettes
vign_values <-
expand.grid(trading_importance = 0:1, risk=0:1, deal=0:4) %>%
arrange(trading_importance, risk) %>%
set_value_labels(
trading_importance =
c('Control: Wirtschaft bleibt unberührt'=0,
'Treatment: Wirtschaft schrumpft um 5%'=1),
risk=c('Control: Kein Risiko durch Mutationen'=0,
'Treatment: Erhöhtes Risiko durch Mutationen'=1),
deal= deal_labels) %>%
mutate(vignr=1:20) %>% as_tibble()
df <-
list(
w4 %>%
mutate(vignr = as.numeric(run1_exp8)) %>% left_join(vign_values) %>%
mutate(round = 1,
cash = 	exp7_money1,
doses = exp7_doses1) %>%
select(group, round, cash, doses, trading_importance, risk, deal, ID, perspective_fed_indian, perspective_fed_german, vaccinated),
w4 %>%
mutate(vignr = as.numeric(run2_exp8)) %>% left_join(vign_values) %>%
mutate(round = 2,
cash = 	exp7_money2,
doses =  exp7_doses2) %>%
select(group, round, cash, doses, trading_importance, risk, deal, ID, perspective_fed_indian, perspective_fed_german, vaccinated)) %>%
bind_rows %>%
dplyr::filter(group !=3) %>%
mutate(id = ID,
others_number = (deal==1 | deal == 3)*2 + (deal==2 | deal == 4)*4,
others_giving = (deal==1 | deal == 2)*2 + (deal==3 | deal == 4)*4,
others_average = others_giving/others_number,
others_average = ifelse(others_number==0, 0, others_average),
deal = factor(deal, deal_labels, names(deal_labels)),
risk_factor = factor(risk, 0:1, c("Low", "High")),
trading_factor = factor(trading_importance, 0:1, c("Low", "High")),
risk = risk - mean(risk),
trading_importance = trading_importance - mean(trading_importance),
others_number_norm = others_number - mean(others_number),
others_giving_norm = others_giving - mean(others_giving),
cash_billions = 	cash*1000,
cash_billions_log = 	log(1 + cash_billions))
# Chunk 3
cash_histogram <-
df %>% mutate(coarsened_cash = ifelse(cash_billions > 12, 12, cash_billions)) %>% ggplot(aes(coarsened_cash)) + geom_histogram() +
xlab("Cash (censored at 12 billion")
cash_histogram
# Support sizes
amounts_d <- seq(0, 22, .5)
amounts_v <- seq(0, 200, 1)
support <- function(x = df$cash_billions, amounts = amounts_d)
data.frame(
amounts = amounts,
support = sapply(amounts, function(j)
mean(x >= j, na.rm = TRUE)))
s1 <- list(
Low = support(
df %>% dplyr::filter(risk_factor == "Low" & trading_factor == "Low") %>% pull(cash_billions),
amounts = amounts_d),
High  =  support(
df %>% dplyr::filter(risk_factor == "High" & trading_factor == "High")%>% pull(cash_billions), amounts = amounts_d)) %>%
bind_rows(.id = "Costs")
s2 <- list(
Low = support(
df %>% dplyr::filter(deal == "No deal") %>% pull(cash_billions)),
High  =  support(
df %>% dplyr::filter(deal == "40 give 40 bn") %>% pull(cash_billions))) %>%
bind_rows(.id = "Mulilateralism")
s3 <- list(
Low = support(
df %>% dplyr::filter(risk_factor == "Low" & trading_factor == "Low") %>% pull(doses), amounts_v),
High  =  support(
df %>% dplyr::filter(risk_factor == "Low" & trading_factor == "High") %>% pull(doses), amounts_v)) %>%
bind_rows(.id = "Costs")
s4 <- list(
Low = support(
df %>% dplyr::filter(deal == "No deal") %>% pull(doses), amounts_v),
High  =  support(
df %>% dplyr::filter(deal == "40 give 40 bn") %>% pull(doses), amounts_v)) %>%
bind_rows(.id = "Mulilateralism")
supports <- ggarrange(
s1 %>% ggplot(aes(amounts, support, color = Costs)) + geom_line() + ylim(0,1) + theme_bw() + xlab("German contribution (bn Euro)") + ylab("Share supporting")  + theme(legend.position="bottom"),
s2 %>% ggplot(aes(amounts, support, color = Mulilateralism)) + geom_line() + ylim(0,1) + theme_bw() + xlab("German contribution (bn  Euro)") + ylab("Share supporting")   + theme(legend.position="bottom") + ylab(""),
s3 %>% ggplot(aes(amounts, support, color = Costs)) + geom_line() + ylim(0,1) + theme_bw() + xlab("German contribution (mio vaccines)") + ylab("Share supporting")  + theme(legend.position="bottom"),
s4 %>% ggplot(aes(amounts, support, color = Mulilateralism)) + geom_line() + ylim(0,1) + theme_bw() + xlab("German contribution (mio vaccines)") + ylab("Share supporting")   + theme(legend.position="bottom") + ylab(""),
nrow = 2, ncol = 2)
pdf("2_output/cumulative.pdf", height = 6, width = 10)
supports
dev.off()
supports
# Chunk 4
raw  <-
df %>%
mutate(costs = ((risk_factor == "High") + 2*(trading_factor=="High"))) %>%
group_by(trading_factor, risk, deal, costs) %>%
summarize(cash_bn = median(cash_billions, na.rm = TRUE),
doses = median(doses, na.rm = TRUE))  %>%
gather("outcome","value",  -risk,  -deal, -trading_factor, -costs)
medians_plot <-
raw %>% ggplot(aes(risk, value, color = trading_factor)) +
facet_grid(outcome ~ deal, scales = "free_y") + geom_point()  + geom_line() + ylim(c(0, NA)) + theme_bw() + ylab(" ")+
scale_x_continuous(breaks=c(-.45,.45), labels = c("Low", "High"))
pdf("2_output/medians.pdf", height = 5, width = 8)
medians_plot
dev.off()
# Note: use bootstrapping to add standard errors on the median?
observation_plot <- function(data = df)
data %>% dplyr::select(risk_factor, deal, trading_factor, cash_billions, doses, vaccinated) %>%
mutate(cash_billions = ifelse(cash_billions>20, 20, cash_billions)) %>%
gather("outcome","value",  -risk_factor,  -deal, -trading_factor, - vaccinated) %>%
mutate(outcome = factor(outcome, c("cash_billions", "doses"), c("Billion Euros", "Million doses"))) %>%
ggplot(aes(risk_factor, value, color = trading_factor)) + facet_grid(outcome ~ deal, scales = "free_y") + geom_boxplot() + ylim(c(0, NA)) + theme_bw() +
scale_y_continuous(trans='sqrt') + ylab(" ") + xlab("Mutation risk")
observation_plot()
# Chunk 5
df %>% group_by(vaccinated) %>%
summarize(median_cash = median(cash_billions),
mean_cash = mean(cash_billions),
median_doses = median(doses),
mean_doses = mean(doses),
)
# Chunk 6
main_results <-
list(
cash = lm_robust(cash ~ trading_importance*risk*others_number_norm*others_giving_norm  + round, fixed_effects = ~id,  se_type = "stata", data = df) %>% tidy,
doses = lm_robust(doses ~ trading_importance*risk*others_number_norm*others_giving_norm  + round, fixed_effects = ~id,  se_type = "stata", data = df) %>% tidy) %>% bind_rows()
treatments <- c("trading_importance", "risk", "others_number", "others_giving")
treatments_norm <- c("trading_importance", "risk", "others_number_norm", "others_giving_norm")
treatment_labels <- c("Trading importance", "Risk", "Number of others giving (10s)", "Amount given by others\n(10s of billions)")
# Chunk 7
figure_1 <-
main_results %>%
dplyr::filter(term %in% treatments_norm) %>%
mutate(Treatment = factor(term, treatments_norm, treatment_labels)) %>%
ggplot(aes(estimate, Treatment)) + geom_point()+
geom_errorbar(aes(xmin = conf.low, xmax = conf.high), width = .1)+
geom_vline(xintercept=0, linetype="longdash", lwd=0.35, colour = "#B55555") +
theme_bw() + facet_grid(~outcome, scales = "free_x")+
ylab("")
df_mean <- df %>%
group_by(risk_factor) %>%
summarize(average = mean(cash_billions, na.rm = TRUE)) %>%
ungroup()
figure_2 <-
df %>%
ggplot(aes(risk_factor, cash_billions)) +
geom_boxplot() + ylab("Billions of Euros")   + xlab("Risk")  + scale_y_sqrt() +
geom_point(data = df_mean,
mapping = aes(x = risk_factor, y = average),
color="red")
figure_3 <-
df %>%
ggplot(aes(risk_factor, doses)) +
geom_boxplot() + ylab("Millions of doses") + xlab("Risk")
figure_2
figure_3
# Chunk 8
figure_1
pdf("2_output/E1_main.pdf", width = 6, height = 3)
figure_1
dev.off()
main_results <-
list(
cash = lm_robust(cash_billions ~ trading_importance*risk*others_number_norm*others_giving_norm  + round, fixed_effects = ~id,  se_type = "stata", data = df) %>% tidy,
doses = lm_robust(doses ~ trading_importance*risk*others_number_norm*others_giving_norm  + round, fixed_effects = ~id,  se_type = "stata", data = df) %>% tidy) %>% bind_rows()
treatments <- c("trading_importance", "risk", "others_number", "others_giving")
treatments_norm <- c("trading_importance", "risk", "others_number_norm", "others_giving_norm")
treatment_labels <- c("Trading importance", "Risk", "Number of others giving (10s)", "Amount given by others\n(10s of billions)")
figure_1 <-
main_results %>%
dplyr::filter(term %in% treatments_norm) %>%
mutate(Treatment = factor(term, treatments_norm, treatment_labels)) %>%
ggplot(aes(estimate, Treatment)) + geom_point()+
geom_errorbar(aes(xmin = conf.low, xmax = conf.high), width = .1)+
geom_vline(xintercept=0, linetype="longdash", lwd=0.35, colour = "#B55555") +
theme_bw() + facet_grid(~outcome, scales = "free_x")+
ylab("")
df_mean <- df %>%
group_by(risk_factor) %>%
summarize(average = mean(cash_billions, na.rm = TRUE)) %>%
ungroup()
figure_2 <-
df %>%
ggplot(aes(risk_factor, cash_billions)) +
geom_boxplot() + ylab("Billions of Euros")   + xlab("Risk")  + scale_y_sqrt() +
geom_point(data = df_mean,
mapping = aes(x = risk_factor, y = average),
color="red")
figure_3 <-
df %>%
ggplot(aes(risk_factor, doses)) +
geom_boxplot() + ylab("Millions of doses") + xlab("Risk")
figure_2
figure_3
figure_1
main_results
figure_1 <-
main_results %>%
dplyr::filter(term %in% treatments_norm) %>%
mutate(Treatment = factor(term, treatments_norm, treatment_labels),
outcome = factor(outcome, c("cash_billions", "doses"), "Cash (billion Euros)", "Doses (Millions)") %>%
ggplot(aes(estimate, Treatment)) + geom_point()+
geom_errorbar(aes(xmin = conf.low, xmax = conf.high), width = .1)+
geom_vline(xintercept=0, linetype="longdash", lwd=0.35, colour = "#B55555") +
theme_bw() + facet_grid(~outcome, scales = "free_x")+
ylab("")
figure_1 <-
main_results %>%
dplyr::filter(term %in% treatments_norm) %>%
mutate(Treatment = factor(term, treatments_norm, treatment_labels),
outcome = factor(outcome, c("cash_billions", "doses"), "Cash (billion Euros)", "Doses (Millions)")) %>%
ggplot(aes(estimate, Treatment)) + geom_point()+
geom_errorbar(aes(xmin = conf.low, xmax = conf.high), width = .1)+
geom_vline(xintercept=0, linetype="longdash", lwd=0.35, colour = "#B55555") +
theme_bw() + facet_grid(~outcome, scales = "free_x")+
ylab("")
df_mean <- df %>%
group_by(risk_factor) %>%
summarize(average = mean(cash_billions, na.rm = TRUE)) %>%
ungroup()
figure_2 <-
df %>%
ggplot(aes(risk_factor, cash_billions)) +
geom_boxplot() + ylab("Billions of Euros")   + xlab("Risk")  + scale_y_sqrt() +
geom_point(data = df_mean,
mapping = aes(x = risk_factor, y = average),
color="red")
figure_3 <-
df %>%
ggplot(aes(risk_factor, doses)) +
geom_boxplot() + ylab("Millions of doses") + xlab("Risk")
figure_2
figure_3
figure_1
pdf("2_output/E1_main.pdf", width = 6, height = 3)
figure_1
dev.off()
df$cash_billions %>% range
df %>% group_by(risk_factor) %>% summarize(b = mean(cash_billions))
df %>% group_by(risk_factor) %>% summarize(b = median(cash_billions))
df %>% group_by(risk_factor) %>% summarize(
mean_c = mean(cash_billions),
median_c = median(cash_billions),
mean_d = mean(doses),
median_d = median(doses))
lm_robust(log(cash_billions+1) ~ trading_factor*risk_factor+ treatment_video + round + perspective_fed_german +perspective_fed_indian,  se_type = "stata", data = df) %>% tidy  %>%
kbl(digit =2) %>%
kable_minimal()
main_df$cash_billions ~
main_df$cash_billions
main_df$cash_billions
lm_robust(cash_billions ~  perspective_fed_german - perspective_fed_indiandata = df)
lm_robust(cash_billions ~  perspective_fed_german - perspective_fed_indian, data = df)
lm_robust(cash_billions ~  perspective_fed_german + perspective_fed_indian, data = df)
M <- lm_robust(cash_billions ~  perspective_fed_german + perspective_fed_indian, data = df)
M$r.squared
plot(df$cash_billions, df$perspective_fed_indian)
plot(df$cash_billions, df$perspective_fed_indian)
M <- lm_robust(cash_billions_log ~  perspective_fed_german + perspective_fed_indian, data = df)
M$r.squared
plot(df$cash_billions_log, df$perspective_fed_indian)
M <- lm_robust(cash_billions_log ~  perspective_fed_german + perspective_fed_indian + treatment_video, data = df)
M$r.squared
plot(df$cash_billions_log, df$perspective_fed_indian)
main_df %>% group_by(wave) %>%
summarize(
priority_de_indian = mean(perspective_fed_indian),
priority_de_german = mean(perspective_fed_german),
#   priority_who_indian = mean(perspective_who_indian),
#    priority_who_german = mean(perspective_who_german),
de_ind_preference  = mean(perspective_fed_german <= perspective_fed_indian),
de_ind_preference2  = mean(perspective_fed_german < perspective_fed_indian),
de_ind_preference3  = mean(perspective_fed_german == perspective_fed_indian),
#   who = mean(who_de_preference, na.rm = TRUE),
#   who_priority = mean(who_de_preference>0, na.rm = TRUE)
) %>% t
deal_labels = c("No deal"=0, "20 give 20 bn"=1, "40 give 20b"=2,
"20 give 40 bn"=3, "40 give 40 bn"=4)
# c('Control: kein Abkommen'=0,
#   'Treatment: Abkommen, 20 Länder, 20 Milliarden'=1,
#   'Treatment: Abkommen, 40 Länder, 20 Milliarden'=2,
#   'Treatment: Abkommen, 20 Länder, 40 Milliarden'=3,
#   'Treatment: Abkommen, 40 Länder, 40 Milliarden'=4)
main_df <- read_csv('1_input/combined.csv')
w4 <- main_df %>% dplyr::filter(wave==4)
# labs <- var_label(w4) %>% unlist
# data.frame(names(labs), labs) %>% kable()
# creating vignettes
vign_values <-
expand.grid(trading_importance = 0:1, risk=0:1, deal=0:4) %>%
arrange(trading_importance, risk) %>%
set_value_labels(
trading_importance =
c('Control: Wirtschaft bleibt unberührt'=0,
'Treatment: Wirtschaft schrumpft um 5%'=1),
risk=c('Control: Kein Risiko durch Mutationen'=0,
'Treatment: Erhöhtes Risiko durch Mutationen'=1),
deal= deal_labels) %>%
mutate(vignr=1:20) %>% as_tibble()
df <-
list(
w4 %>%
mutate(vignr = as.numeric(run1_exp8)) %>% left_join(vign_values) %>%
mutate(round = 1,
cash = 	exp7_money1,
doses = exp7_doses1) %>%
select(group, round, cash, doses, trading_importance, risk, deal, ID, perspective_fed_indian, perspective_fed_german, vaccinated),
w4 %>%
mutate(vignr = as.numeric(run2_exp8)) %>% left_join(vign_values) %>%
mutate(round = 2,
cash = 	exp7_money2,
doses =  exp7_doses2) %>%
select(group, round, cash, doses, trading_importance, risk, deal, ID, perspective_fed_indian, perspective_fed_german, vaccinated)) %>%
bind_rows %>%
dplyr::filter(group !=3) %>%
mutate(id = ID,
others_number = (deal==1 | deal == 3)*2 + (deal==2 | deal == 4)*4,
others_giving = (deal==1 | deal == 2)*2 + (deal==3 | deal == 4)*4,
others_average = others_giving/others_number,
others_average = ifelse(others_number==0, 0, others_average),
deal = factor(deal, deal_labels, names(deal_labels)),
risk_factor = factor(risk, 0:1, c("Low", "High")),
trading_factor = factor(trading_importance, 0:1, c("Low", "High")),
risk = risk - mean(risk),
trading_importance = trading_importance - mean(trading_importance),
others_number_norm = others_number - mean(others_number),
others_giving_norm = others_giving - mean(others_giving),
cash_billions = 	cash*1000,
cash_billions_log = 	log(1 + cash_billions))
knitr::opts_chunk$set(echo=TRUE, warning=FALSE, message=FALSE, comment=NA)
options(qwraps2_markup = "markdown")
## Packages
if (!require(pacman)) install.packages("pacman")
pacman::p_load(
ggpubr,      # for ggarrange
ggridges,    # plot
cregg,       # conjoint
readxl,      # read excel
gtrendsR,    # google trends
aod,         # hypothesis testing (1.3.1)
car,         # linear hypothesis testing for causal tree (3.0-2)
corrplot,    # Correlations (0.84)
DeclareDesign,
dplyr,       # Data manipulation (0.8.0.1)
evtree,      # evolutionary learning of globally optimal trees (1.0-7)
fastDummies,
fBasics,     # Summary statistics (3042.89)
ggplot2,
grf,         # Generalized random forests (0.10.2)
haven,       # load sav
kableExtra,  # Prettier RMarkdown (1.0.1)
knitr,
labelled,
psych,       # Correlation p-values (1.8.12)
purrr,
rpart,       # Classification and regression trees, or CART (4.1-13)
reshape2,
rpart.plot,  # Plotting trees (3.0.6)
readr,       # Reading csv files (1.3.1)
sjlabelled,
stats,
summarytools,
texreg,
tidyverse,
tidyselect,
tidyr,       # Database operations (0.8.3)
treeClust,   # Predicting leaf position for causal trees (1.1-7)
tibble)      # Modern alternative to data frames (2.1.1)
# Set seed for reproducibility
set.seed(201911)
deal_labels = c("No deal"=0, "20 give 20 bn"=1, "40 give 20b"=2,
"20 give 40 bn"=3, "40 give 40 bn"=4)
# c('Control: kein Abkommen'=0,
#   'Treatment: Abkommen, 20 Länder, 20 Milliarden'=1,
#   'Treatment: Abkommen, 40 Länder, 20 Milliarden'=2,
#   'Treatment: Abkommen, 20 Länder, 40 Milliarden'=3,
#   'Treatment: Abkommen, 40 Länder, 40 Milliarden'=4)
main_df <- read_csv('1_input/combined.csv')
w4 <- main_df %>% dplyr::filter(wave==4)
# labs <- var_label(w4) %>% unlist
# data.frame(names(labs), labs) %>% kable()
# creating vignettes
vign_values <-
expand.grid(trading_importance = 0:1, risk=0:1, deal=0:4) %>%
arrange(trading_importance, risk) %>%
set_value_labels(
trading_importance =
c('Control: Wirtschaft bleibt unberührt'=0,
'Treatment: Wirtschaft schrumpft um 5%'=1),
risk=c('Control: Kein Risiko durch Mutationen'=0,
'Treatment: Erhöhtes Risiko durch Mutationen'=1),
deal= deal_labels) %>%
mutate(vignr=1:20) %>% as_tibble()
df <-
list(
w4 %>%
mutate(vignr = as.numeric(run1_exp8)) %>% left_join(vign_values) %>%
mutate(round = 1,
cash = 	exp7_money1,
doses = exp7_doses1) %>%
select(group, round, cash, doses, trading_importance, risk, deal, ID, perspective_fed_indian, perspective_fed_german, vaccinated),
w4 %>%
mutate(vignr = as.numeric(run2_exp8)) %>% left_join(vign_values) %>%
mutate(round = 2,
cash = 	exp7_money2,
doses =  exp7_doses2) %>%
select(group, round, cash, doses, trading_importance, risk, deal, ID, perspective_fed_indian, perspective_fed_german, vaccinated)) %>%
bind_rows %>%
dplyr::filter(group !=3) %>%
mutate(id = ID,
others_number = (deal==1 | deal == 3)*2 + (deal==2 | deal == 4)*4,
others_giving = (deal==1 | deal == 2)*2 + (deal==3 | deal == 4)*4,
others_average = others_giving/others_number,
others_average = ifelse(others_number==0, 0, others_average),
deal = factor(deal, deal_labels, names(deal_labels)),
risk_factor = factor(risk, 0:1, c("Low", "High")),
trading_factor = factor(trading_importance, 0:1, c("Low", "High")),
risk = risk - mean(risk),
trading_importance = trading_importance - mean(trading_importance),
others_number_norm = others_number - mean(others_number),
others_giving_norm = others_giving - mean(others_giving),
cash_billions = 	cash*1000,
cash_billions_log = 	log(1 + cash_billions))
table(main_df$vaccinated, main_df$wave)
main_df %>% group_by(wave, vaccinated) %>% summarize(mean_AfD = mean(AfD))
main_df %>% group_by(wave, AfD) %>% summarize(mean_AfD = mean(vaccinated))
main_df %>% group_by(wave, vaccinated) %>% summarize(mean_AfD = mean(AfD), n = n())
main_df %>% group_by(wave) %>% summarize(mean_AfD = mean(AfD), n = n())
knitr::opts_chunk$set(echo = FALSE)
load("Solidarity.RData")
r2_gdp <- lm_robust(
people_fully_vaccinated_per_hundred ~  gdp_per_capita, total_deaths_per_million,
data = small_owd)
library(knitr)
library(tidyverse)
library(DeclareDesign)
r2_gdp <- lm_robust(
people_fully_vaccinated_per_hundred ~  gdp_per_capita, total_deaths_per_million,
data = small_owd)
r2_gdp
lm_robust(
people_fully_vaccinated_per_hundred ~  gdp_per_capita + total_deaths_per_million,
data = small_owd) %>% tidy %>% kable
small_owd %>% ggplot(aes(people_fully_vaccinated_per_hundred,  gdp_per_capita))  %>% ggpoint()
small_owd %>% ggplot(aes(people_fully_vaccinated_per_hundred,  gdp_per_capita))  %>% ggpoints()
small_owd %>% ggplot(aes(people_fully_vaccinated_per_hundred,  gdp_per_capita))  %>% geom_point()
small_owd %>% ggplot(aes(people_fully_vaccinated_per_hundred,  gdp_per_capita))  + geom_point()
small_owd %>% ggplot(aes(people_fully_vaccinated_per_hundred,  gdp_per_capita))  + geom_point()
small_owd %>% ggplot(aes(gdp_per_capita, people_fully_vaccinated_per_hundred))  + geom_point()
small_owd %>% ggplot(aes(gdp_per_capita, people_fully_vaccinated_per_hundred))  + geom_point()
small_owd %>% ggplot(aes(gdp_per_capita, people_fully_vaccinated_per_hundred))  + geom_point() + xlab("GDP per capita") + ylim(NA, 100) + ylab("% vaccinated")
small_owd %>% ggplot(aes(gdp_per_capita, people_fully_vaccinated_per_hundred))  + geom_point() + xlab("GDP per capita") + ylim(NA, 100) + ylab("% vaccinated")
small_owd %>% ggplot(aes(gdp_per_capita, total_deaths_per_million))  + geom_point() + xlab("Deaths / million") + ylim(NA, 100) + ylab("% vaccinated")
small_owd %>% ggplot(aes(gdp_per_capita, total_deaths_per_million))  + geom_point() + xlab("Deaths / million") + ylim(NA, 100) + ylab("% vaccinated") + scale_x_continuous(trans='log2')
small_owd %>% ggplot(aes(gdp_per_capita, total_deaths_per_million))  + geom_point() + xlab("Deaths / million") + ylim(NA, 100) + ylab("% vaccinated") + scale_y_sqrt()
small_owd %>% ggplot(aes(gdp_per_capita, total_deaths_per_million+.01))  + geom_point() + xlab("Deaths / million") + ylim(NA, 100) + ylab("% vaccinated") + scale_x_continuous(trans='log2')
small_owd %>% ggplot(aes(total_deaths_per_million, people_fully_vaccinated_per_hundred +.01))  + geom_point() + xlab("Deaths / million") + ylim(NA, 100) + ylab("% vaccinated") + scale_x_continuous(trans='log2')
small_owd %>% ggplot(aes(total_deaths_per_million, people_fully_vaccinated_per_hundred +.01))  + geom_point() + xlab("Deaths / million") + ylim(NA, 100) + ylab("% vaccinated")
supports
supports
plot(df$cash_billions_log, df$perspective_fed_indian)
plot(df$cash_billions_log, df$perspective_fed_indian)
